# Apply the RPS mask on the virtual interfaces of the host by default, becasue
# from the container perspective the RPS mask the will be consulted, is the one on the RX side of the veth in the host.
# Consider the following diagram:
# Pod A <veth1 - veth2> host <veth3 - veth4> Pod B
#  veth2's RPS affinity is the one determining the CPUs that are handling the packet processing when sending data from Pod A to pod B.
# Additional common scenarios:
# 1. Pod A = sender, host = receiver
#  The RPS affinity of the host side should be consulted (because itâ€™s the receiver) and it should be set to cpus not sensitive to preemption (reserved pool).
# 2. Pod A = receiver, host = sender
#  In case of no RPS mask on the receiver side, the sender needs to pay the price and do all the processing on its cores.
net.core.rps_default_mask = {{.RPSMask}}
