---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NzAwMCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 7917a607-0b74-4d3b-8efe-b5232d1584d2
      openshift.io/token-secret.name: builder-token-czqbz
      openshift.io/token-secret.value: ""
    creationTimestamp: "2022-06-13T09:19:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"edf925c6-1f4c-43d4-b78c-e06c83c446b1"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:56Z"
    name: builder-dockercfg-jvkdx
    namespace: openshift-operators
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-czqbz
      uid: edf925c6-1f4c-43d4-b78c-e06c83c446b1
    resourceVersion: "15310"
    uid: e032343b-0685-43cb-9912-8f5d0db2064e
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTkgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTMyIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 7917a607-0b74-4d3b-8efe-b5232d1584d2
    creationTimestamp: "2022-06-13T09:19:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-13T09:22:44Z"
    name: builder-token-czqbz
    namespace: openshift-operators
    resourceVersion: "16109"
    uid: edf925c6-1f4c-43d4-b78c-e06c83c446b1
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NzAwMCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: ed688e9a-58b9-4a06-88b1-b39d3ba20424
      openshift.io/token-secret.name: default-token-gvgnv
      openshift.io/token-secret.value: ""
    creationTimestamp: "2022-06-13T09:19:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"080b7f03-bc2b-43d6-b9c1-e8a456d64c9f"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:52Z"
    name: default-dockercfg-nczw7
    namespace: openshift-operators
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-gvgnv
      uid: 080b7f03-bc2b-43d6-b9c1-e8a456d64c9f
    resourceVersion: "15451"
    uid: 6f542545-8e59-455a-b10c-c5438e6fee08
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTkgYnl0ZXMgbG9uZw==
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJVWFRcVgyQWtoRnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpJd05qRXpNRGt3T0RVMldoY05Nekl3TmpFd01Ea3dPRFUyV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEFTOE1TWnVzSXMwYkhScGNhQWVJc1V2cGpDdmhpRwpKOHpIaTAwdVBmR0FiUVFaa0N4WE9lNVlCV29laEIyTmk2aTYzcWhsY1pETC92SE1lVTA1bUxRQ3FQKzQxYTBzClJXWHg5MWYraXN0dFJIQldlekU5QnpXaXN0bHJreUVZOGQrUTRna2pzOHlEeWJxRzFxb1owZjdPTy8ycFBheW0KU3Q3akNuUTZHWXFGdlhDU0FBMjZQUkQzdDlQS0pVZmZFSFVNOEZ3VWdyUWVNamwzTDl5bUQzUVpROFVLS3U5bAphbjlqSlhZczU2MXJkNHYrRDlReWt4eUlKYXJYYzJTVGl4ZlovWTRUOGdEQk9HMktBbzZuaVZ5QzBmM2JvcjdDCkRuTUVIdTVFb0hMOEkzTk5CZ3hnOEFFQU0xVi9mTkFwL29DOTRzUmplNHJCbDZRa1dzVWpzeDhDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk94ZgpKUThzeWgrZGE0Y1pnZHY0UHF0eDgzMzVNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNHZXJsVEV3WTl0aGhlClkzc1h3RW9mOVMrY2NzNENxVGNFNi85OE9Dbm84UTN6ZTU3VGN2ZDUyR2RZa2pHdkhCNzJEUldoVUN1a1lDTnEKWW0zVElERUVQNDkyVk1aL0NDYitUV2hUa05USEp2alA2ZG9OQXd0WUUvV1Q1LzBvWXQ1cTlscFh6U0VNL3VGNQpMU0NTY2NCQW93WGFrdWZ5UTlSRTlIRTJCcnF1Z3JWcWlMcDFzeFNhNnEzaGgvOGp5YjYvSGQvRFFCV2hvWEwyCmpxU1FDbWlWcVdIZWczRkZsVG5OY2d6bU5DR1RCUmZKaHFNT3RDeUpZUDN5Zmt4dGFTMS83Nk1POWFMUjhvOWgKVE15dTZOenZyUEQyWmVRVmg4anJEdzJLdkhoRCtpSmJUdmRqU25yMmhkVmRqbXYzN0FaNDhFNlo0b2lxSTQrdQphV3k3UUprdAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1ZeUNXVWZyMmtBd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJeU1EWXhNekE1TURnMU5sb1hEVE15TURZeE1EQTVNRGcxTmxvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5cm1NVDVYR0FoM2cKbkszQ2JWQkhOQ210d3VTaG9HQkVsZHFMUkJvTUVGekw3UXRoY0RIMVFTa094RzJkL09ZUU9tOHppajZCTVpaOQpRaG5ObTRzbGgwOHcxYWI4YkZTUkY5V1BpNDBRZVAxUy96a0cwRDM1cjZ2YWpTTDh5bXdMSDB6RHJwSjRpUkZ0CjdqWGthWUJ1K1l5N09UTzgycE9IcHk1dEw4cDl0cGF3aVp3dGc3TzF3YmZUZTk5ME1IcjMxem1sb09IYkVOL0kKdHpzcTV5MFF4S1MyNEpncThvS1VQN2ZMWGtZTUFlSVU0TWRjUUk2dkZUTkdXcktPdDBHbEpxZmVkdUc5UVhteAp3WVFzNndtZFY1NytvSnZxb3B0WW1mdk5EVmkwb2xpc3BtM2c2WGhUWGY2ZGZpMklya1N4YXhaSTI1UzZoTk94ClBGeHJUMi9ZMFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVXVJUnZLWmFWRUtxMm9zbUNDcUdTNFZiZERsRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUZPOEFucDQzanQ1ckFOQm9zQkJEYStwTmdTa0JsRTZwUEpHUWhVRktodHRoYnJaZkRiMlNUbWo2UHQ0CkVTeVJpa1RCNTlWNmo1TFRKT2NtUGtEYzRPR25IOUpSQ1o4dndhN2NDVzhOM1c0WWdsQzRHQ29MejlJQ0kzOXcKUHJDMVExUDJLK0xVY3AzWUd3MnNQTjlYNms2dzRTWFhBMGtiY293WlRhUS90dXhyemtxUUpkalhlcEdqTExDVQprNHpxdFE1Vm1QcVozdmZZclRDM0ljS2dUTlVXcXpmL1JhcjRIMDd6WVhUaEZqd0FSZnc3T0xsbHBmUUR1NW5wCkswUUJvajhMdjByZmNLcXYrZTRvbUJ1bWJKTGtqQk1CL0pCeURpMGgrcFoybTVrNTBINnBlV25Da1hONFFJWjMKWlUwcTJ6a1l3OFR1QVVwaWU1a0orNlpJeXZBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSVNJMjB2VjI0T0VFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl5TURZeE16QTVNRGcxTmxvWERUTXlNRFl4TURBNU1EZzFObG93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXFyTVJQbDRrdUtVb0ZkbGZXTnZKbWxTOXFaZWtBZnNPdEl4QmJnckhIYXhJY0Mzd0FadnlKYnp1ZW9DZwpRSXF1SGFNMEV1Zmc3b2tGMXVLN3ZhTmZJbHg0dFovQk90NXVnVkFFYXZpVkloLzVqcjZQQ29EajBtZFI0MGNaCitzZDBrZlJ5TGd5TUowL0dTbWs1QXFzUUd4UnlzZFNsYWw3VTh3VEdvVTMydkw4WEVtYWhkeUh2SHd2L2UyV0oKdWl2VUNIcmttdngyV0gybUN6eVFpb0s5QVhDNFpUV1RDcnNSYmNyazJaWU9wUjBVa0NRcjJ1NGRUOVZwZkdINwoxZDF0SGl5SlJDUDgrMHRHeENkWDMrZ0tieWl3Wno4OGxEYmRxK0lGQlRxR1dwUlhhZklRREF2TjV3djVHdjNUCmtuK04rMGNGRGpQdDZPZS8ydVU5N2FEa2F3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVZRXRGZFBqZ0I2Z1hyNUorRjVseEJRcFNuaG93RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLZXlxeVEwYXZhT1VJNnBZeW1mYnZyTTMyelZVdlY2UTY2dVphTVMyNU1qCi90c0xtZGFLT2k3bnZhZHhCeVZDWmNCK3daVll6SnVLdGE4ekJZeXkvTFdjemR3T2dXVkljdGZLcDBBRWhGZnAKS0kwTHlLU0hlMTh2Vm9scnZXcXl2WmZydE9yZ0VXQUp4ZlBHZkNCSE5YMkxrNWhXOHM0YmQxSk5wUWJJQnJzcgo1eGJPWUdlaGlZb0dUZEE0d0JqRjJOb2llSS9LbjQ5RWxzUXh6QU4xSmMxY3kxRlBVcTFTT0VxR1ZEanNhSnBRCm51K3VENitnNUplVVo3UCtzemRtN0hscEhJLzRzWlo3VVVIVkRma3RLZlBOWUJUM1g3ajJReUs1NEZzUUYwNHIKY3lsTTY0RzZKTUFkczdDVEZtcEdYNmRjWEdNa3JISWM3REVYU2RCdW84VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUljOE1aSnBxTVBFY3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TmpVMU1URXhOemsxTUI0WERUSXlNRFl4TXpBNU1UWXoKTlZvWERUTXlNRFl4TURBNU1UWXpObG93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOalUxTVRFeE56azFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBMeTMKL2grTXlMcmxHNisxemd6dC90cWxRTnVBWkQ4cGhXZm9MUlJLbi9KWVQ0SFhyRE50dk8wTzY4UXFBNTM4Z2xOdwp0R1EwMytsQVRDeXhReXNCM09kUmU1b1MzUUJjYlZVaWRVdVh4LzMyQjg4dEhUd0lNRCs4NVZYK2dVWkRkNEF3CmU1ZFdyN3p1eWF0ZU5xbWVybFVlNWw5bmZBQXhDSGtjMkFiaEt6M291UUZIdkdSZ3NjZkFmbE93dldyQ0dUQysKVVdHNEhYK1hRZ0dDcmxuV2JiK2pXRFhVVnFNcllXbVFhVHgxTFpBcStRbWNITk14bHRKYkpYNnVwOHBNSUhiMwpKQ2pLNUh4UW9EQ1lMRkdsKzVua1g1WHpMSWR3djVJMEtSWGF0MkszU25HTStuaTN3OTBPSDJ2TDg5Nll0a3duCmI0bUdkWHZhTlBhanhjN1psd0lEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVN3cyMnVURmJGcGxQYmtyZTBJakFtWHBIanAwd0h3WURWUjBqQkJndwpGb0FVN3cyMnVURmJGcGxQYmtyZTBJakFtWHBIanAwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKN0RWL0lnCll6RC9LSDhYajdEQUk0QnZuQ21hNzNBOSt1RWlEL0kwdHZMVlh6c3I2SVV4L29qai9vdnc3ZTlBTjNRcks3SHUKNmc5end5OHFuL0tTSXc3c3BwQ245SUZDclZWdVY4cTdacmo3UUFzZVZYMng1eUF1Mlg3N010RGJoMjVsa254bQp3MUFwS1ExT0czSGUrZUhNbjFLeXFSMlZmdE1GbldqQVF2bjdKUTg4SDJic1NUS0ZDYXg5R0laSWxwdHlDVGRHCnhKRDBjdmNCWUFIWnZFcUU0ZnZCdjQwTS9ISnJicW1wZ3RCc1VSS0N3WW9IWnhTS2UxaHJwVXNoZ283eGhrcEEKTUtHS0lWeTJxaWpuTWdsQ3JLYjFnZHVhVXhza3B2MWV3MlRBMnVTZXlybGxLNm0xeXZic1ZqWXhvTlhTMGptUQpxRFh0MS9HTDhFTVo4MHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyekNDQXBlZ0F3SUJBZ0lJZGNndUpYdCtvazh3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qVTFNVEV4T1RRd01CNFhEVEl5TURZeE16QTVNVGt3TUZvWApEVEkwTURZeE1qQTVNVGt3TVZvd1J6RkZNRU1HQTFVRUF3dzhLaTVoY0hCekxtTnBMV3h1TFhRd2NISnhNM1F0Ck56SXlPVEl1YjNKcFoybHVMV05wTFdsdWRDMW5ZMlV1WkdWMkxuSm9ZMnh2ZFdRdVkyOXRNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvT2djVHRTMFFpMWxlZlVwMEpaaGprVjgyMEFFdUlVVApKSVBrMnVxSjJJcG8zU3N4ZmgrTU9PVlE3cWhvRnNlaDF6RVZpSS9EUk9abzlRZkxTT21mNElPcU12KzJWSElCCkVXamFCU2NEK3NmQ2pGdnlCSU9YUFFQNk9vVUxnOGJjNGhaSzViQUU0VHh6UnBueGQ1am9paFMxMDdFY3dTRlIKWTg2MHgzcjhsMTkxelRRYzl5d0QyenVTQVhQYUdqL2IwM3laeDdkTVdIKzFWeE1pakJucmZnNkRzTjlhdm1kZQpiSTBJTm4zMHBxZVdzRUdPOWg2S1N1OFlnQVk5UitrSG5oZW5CdHZJWG9pQXFQTmtoZldRYVBYTjZiMmsrRGl1ClMySml5OXdiSGh3U2V4a2VGQkdEUlFYb2xFcWFQeGVIeHRrZ2RrY00yQmVXVGpUMVFLdGpkd0lEQVFBQm80Ry8KTUlHOE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUUxHZ3ZMWWdIWi94ZlJSWjRaVVRUVlZwOGRpVEFmQmdOVkhTTUVHREFXCmdCUko2S1c0R2d3Nks4c3ZLaWtzVFk4eVhRelM4VEJIQmdOVkhSRUVRREErZ2p3cUxtRndjSE11WTJrdGJHNHQKZERCd2NuRXpkQzAzTWpJNU1pNXZjbWxuYVc0dFkya3RhVzUwTFdkalpTNWtaWFl1Y21oamJHOTFaQzVqYjIwdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ3NEUUZScFNucS9YcWQ2Smc5RmU5aXU1UEtaVnFnOGhHTzNSOFBkCm9MVHl5UUNDMTdtZDhVeEJUcjJtYlN3eGF6OWROc0dWTmtjTjdOMFFuaTEwbS9CSHpmeTJSM1pPU1NENlM1dTMKOXBYRnEzRjlzcmNUNzNvUWlmT3J0cWhEY2wvMmNYRi9oWHBERkcvZjVoclZ1WFVKbHgrKzhwdEt0YTExeDJScwowNk85T2ROaktDMEZUYVoxRDh0QnQwOUxrVnVlNWZ6cFd5NkZEZWdWZGZVZlAxa2VKdTZHbXZiSUhwQkxSVk00CmpRK2NoRDhoamFmelo1NUFDYTZHUkF2azBHRVJ6cXFOVERiQm1Mc0k5emhHZDJPZng4bUtIN3dPV3NCc2RFaG8KNU5POVRzT25ET1RuOXloQitVTVdtWUo5UkFwbS90UmtNcXBYMWF3bkxEMTFUSmM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0cGJtZHkKWlhOekxXOXdaWEpoZEc5eVFERTJOVFV4TVRFNU5EQXdIaGNOTWpJd05qRXpNRGt4T0RVNVdoY05NalF3TmpFeQpNRGt4T1RBd1dqQW1NU1F3SWdZRFZRUUREQnRwYm1keVpYTnpMVzl3WlhKaGRHOXlRREUyTlRVeE1URTVOREF3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNtcHlKcDB2TEQ3aXhaVElMQmhYVjgKQ21MbjNBQUh1Q1V1d3BZUVd1NDBDbnZxWS9QeU51N0lLNkNMblZoYUNBS0hDcDNqcDFKazVva3N3elgyaGlGZQp2cnMzd2pTeEZmNE12WnA1Tkw0d1BKd0pqS0IxZ2ZiOVJVWW82SzZSbDZ5OUFiT3NaeWRZS0pzWkxjUWJzR0FVCnhuaExodGd0M0w4RzIwN3I0c1hMTUxGOXBRSDdDTDVycjEvRkJrNnRXdWxjazBXVlVrZi9LS21WYUVuTGc3VmwKR0w3VUxMbVN6QTdkdG9kaUdvNW1JZHhxaUR3SUlvMkJRUDY5SXNZYmtuN05tRFJwdUxuOHpPTnFUcFVkN3B0UgoxUmhOdDNneXV6K2Uya0lSNytpS01wMmlWbWRQa3RWdkdtTnlUcThXWndUUjN5aFB5SlA0cS80azV6Z1E0MEhaCkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUVBd0lDcERBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEcKQTFVZERnUVdCQlJKNktXNEdndzZLOHN2S2lrc1RZOHlYUXpTOFRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpIR3hpbTV4VDI0RDlaWk0vWldwQWVaWXRYL2VrOXVJQkRlNGZBQktUWW1zY3g0Q2xtUDRVUlhRbUNQRHV4ZGhWCjF4M2FkTHRjYW9KQy9LZ2ZuTzNVb3BhLzl5U1k0aGdSelpscWE3UlRWa1NTMWFMcnBVUmRtVEpnMUFpNVhYb2sKMlFWV1VQK1VUclE5aWVmbDdURVZ5NUhiMFNYdE4rd2k3Undhb0dIVEt2UHYwK2NkS1dSMUxOUlFTNGhtR1pHawpyQ1l5eU5xSnlYS3FxRkFYN2lXVW1VMmViK3k2NzZnTit0NVhqbnl5ZldwckVPdTM2OGZ1MGN3MEUrSlBhcmdOCkdMSGxNTzJlNHVTQkNIVlo4Y0o1ZTAvVGZ2R25ZNlFrZWpWenR5MTJzZWdGaGJ5K29Wc2wwTWFWSzhjSFJIVWUKMlhrTFM0dzRCaW1COWhlUXRKaUhrZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSVJpMU9Ddm5sVCtFd0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UWTFOVEV4TVRjNU56QWUKRncweU1qQTJNVE13T1RFMk16ZGFGdzB5TkRBNE1URXdPVEUyTXpoYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUyTlRVeE1URTNPVGN3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN1NnB2Q2d2MS8xbjVTSHhjZ2k0TjBQazk5Y1RjMUpQV0oKczFPczk1T1VKN21vcXpuUUNGWHUxNFFCMGdBVU90UjJTcWxLclNqdytEeUFhaDdVc1ZUOFBLUTB5bHY5TXRUNQpRemtNMVFwbFZUdDIxQ2Fhak03M1RmN2ZINSt6elZMcVZZVzVWeGgyZndNbDdIRUV3R1I5Ukk4MHRBZklWVXYxCktBM1VOcjg2cTEwQkhWNkxPZnJkTWU4Qmw5dHlNU3BBTk9qSWEwWG82WHlXVlVKQXhxT2NGLzl1RHlNL3FPcEsKcnNhc3lMWmg5bWpUUzdSMmFmbnc3QnU5cmI5aGQwVkcycnI4OHBvYTV0WENld0NoZHNHVjVTM3dDeGV2WlVzVwpHQ2YzTTEwcERaT0RKM202VExuRmxzZkZNbmJQUGplZmRaSVArOHNjWmRkeERxcit0N0sxQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUK0FJVE4KYjJ2UmtSbGhNd0hCYzdWZHRtazNsekFmQmdOVkhTTUVHREFXZ0JUK0FJVE5iMnZSa1JsaE13SEJjN1ZkdG1rMwpsekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBU2M1blZCVTBiRzRRWkxZajlHdkM3WHptV056RjFVSFVUQjY5CklsejYzUWJ5cThzVEpTelZoSkRoa2h0VnJFMnhmY1RwZi85Zk1BRDNqcXgwQ0o1YnFsUXo0eHpYZWl4bkpzSmUKSnVZQUdzT3p0WXpWOWFIVDlNckMxalpMNmNGNGJTUjJGaVFSQ2RrYkhHaGc2eHBkTkxlY2xMYzNKcFUvK0pEMgpCUHhkL3h3OVpXQzd6SGVsK2xYZ01QZXhMdUdvVjhIYVRiUHc2WFRKVks3YWt0bGowU1VteWVIR2JBd0Fjb1RLCjhBWkdwYUVpcHcyQjlucHNYN1gxWWdncmZPRjlaWWRyTVNXcDR6NDdKSi9UZzQvVi9YVGhtSm8rdklCc2M1UUsKR2pVcFg4SEtJaU95R2dtKy94RUM5UnNHUFBQciswc0ZEbG1PWTRpYXNWUWZoeW9TbVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    token: OTMyIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: ed688e9a-58b9-4a06-88b1-b39d3ba20424
    creationTimestamp: "2022-06-13T09:19:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-13T09:22:45Z"
    name: default-token-gvgnv
    namespace: openshift-operators
    resourceVersion: "16157"
    uid: 080b7f03-bc2b-43d6-b9c1-e8a456d64c9f
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: NzAyNCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: e5173ced-caba-4276-9d51-2290a961694f
      openshift.io/token-secret.name: deployer-token-2px8j
      openshift.io/token-secret.value: ""
    creationTimestamp: "2022-06-13T09:19:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"72de0c22-ffba-4ef2-aa1c-58bbc5581546"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:56Z"
    name: deployer-dockercfg-f7j4c
    namespace: openshift-operators
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-2px8j
      uid: 72de0c22-ffba-4ef2-aa1c-58bbc5581546
    resourceVersion: "15316"
    uid: 61df6ad7-c312-4706-870a-4598a782ec3c
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTkgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTM2IGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: e5173ced-caba-4276-9d51-2290a961694f
    creationTimestamp: "2022-06-13T09:19:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2022-06-13T09:19:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2022-06-13T09:22:44Z"
    name: deployer-token-2px8j
    namespace: openshift-operators
    resourceVersion: "16084"
    uid: 72de0c22-ffba-4ef2-aa1c-58bbc5581546
  type: kubernetes.io/service-account-token
kind: SecretList
metadata:
  resourceVersion: "77402"
