/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/cluster-node-tuning-operator/pkg/apis/tuned/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// TunedLister helps list Tuneds.
// All objects returned here must be treated as read-only.
type TunedLister interface {
	// List lists all Tuneds in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Tuned, err error)
	// Tuneds returns an object that can list and get Tuneds.
	Tuneds(namespace string) TunedNamespaceLister
	TunedListerExpansion
}

// tunedLister implements the TunedLister interface.
type tunedLister struct {
	listers.ResourceIndexer[*v1.Tuned]
}

// NewTunedLister returns a new TunedLister.
func NewTunedLister(indexer cache.Indexer) TunedLister {
	return &tunedLister{listers.New[*v1.Tuned](indexer, v1.Resource("tuned"))}
}

// Tuneds returns an object that can list and get Tuneds.
func (s *tunedLister) Tuneds(namespace string) TunedNamespaceLister {
	return tunedNamespaceLister{listers.NewNamespaced[*v1.Tuned](s.ResourceIndexer, namespace)}
}

// TunedNamespaceLister helps list and get Tuneds.
// All objects returned here must be treated as read-only.
type TunedNamespaceLister interface {
	// List lists all Tuneds in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Tuned, err error)
	// Get retrieves the Tuned from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Tuned, error)
	TunedNamespaceListerExpansion
}

// tunedNamespaceLister implements the TunedNamespaceLister
// interface.
type tunedNamespaceLister struct {
	listers.ResourceIndexer[*v1.Tuned]
}
