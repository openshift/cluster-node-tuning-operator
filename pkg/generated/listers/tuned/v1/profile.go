/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/cluster-node-tuning-operator/pkg/apis/tuned/v1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ProfileLister helps list Profiles.
// All objects returned here must be treated as read-only.
type ProfileLister interface {
	// List lists all Profiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Profile, err error)
	// Profiles returns an object that can list and get Profiles.
	Profiles(namespace string) ProfileNamespaceLister
	ProfileListerExpansion
}

// profileLister implements the ProfileLister interface.
type profileLister struct {
	listers.ResourceIndexer[*v1.Profile]
}

// NewProfileLister returns a new ProfileLister.
func NewProfileLister(indexer cache.Indexer) ProfileLister {
	return &profileLister{listers.New[*v1.Profile](indexer, v1.Resource("profile"))}
}

// Profiles returns an object that can list and get Profiles.
func (s *profileLister) Profiles(namespace string) ProfileNamespaceLister {
	return profileNamespaceLister{listers.NewNamespaced[*v1.Profile](s.ResourceIndexer, namespace)}
}

// ProfileNamespaceLister helps list and get Profiles.
// All objects returned here must be treated as read-only.
type ProfileNamespaceLister interface {
	// List lists all Profiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Profile, err error)
	// Get retrieves the Profile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Profile, error)
	ProfileNamespaceListerExpansion
}

// profileNamespaceLister implements the ProfileNamespaceLister
// interface.
type profileNamespaceLister struct {
	listers.ResourceIndexer[*v1.Profile]
}
